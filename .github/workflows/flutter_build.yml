name: Build Flutter App

on:
  push:
    tags: 
      - 'v*.*.*'

permissions:
  contents: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'

    - name: Set JAVA_HOME
      run: echo "JAVA_HOME=${{ steps.setup-java.outputs.java-home }}" >> $GITHUB_ENV

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'

    - name: Install dependencies
      run: flutter pub get

    - name: Build APK
      run: flutter build apk --release

    - name: Upload Android APK
      uses: actions/upload-artifact@v2
      with:
        name: app-release.apk
        path: build/app/outputs/flutter-apk/app-release.apk

    - name: Create Release
      id: create_release
      uses: actions/github-script@v6
      with:
        script: |
          const release = await github.rest.repos.createRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            tag_name: `v${process.env.GITHUB_RUN_NUMBER}`,
            name: `Release v${process.env.GITHUB_RUN_NUMBER}`,
            draft: false,
            prerelease: false
          });
          return release.data.upload_url;
  
    - name: Upload Release Asset
      uses: actions/github-script@v6
      with:
        script: |
          const uploadUrl = "${{ steps.create_release.outputs.upload_url }}";
          const artifact = await github.rest.repos.uploadReleaseAsset({
            url: uploadUrl,
            headers: {
              'content-type': 'application/octet-stream',
              'content-length': (await fs.promises.stat('build/app/outputs/flutter-apk/app-release.apk')).size,
            },
            name: 'app-release.apk',
            file: fs.createReadStream('build/app/outputs/flutter-apk/app-release.apk')
          });
          console.log(`Asset uploaded: ${artifact.data.browser_download_url}`);
